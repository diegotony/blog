<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on blog</title><link>https://diegotony.github.io/blog/posts/</link><description>Recent content in Posts on blog</description><generator>Hugo -- gohugo.io</generator><language>es-EC</language><lastBuildDate>Wed, 06 Jul 2022 16:51:04 -0500</lastBuildDate><atom:link href="https://diegotony.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Mis Actions Favoritos Parte 1</title><link>https://diegotony.github.io/blog/posts/github-actions-part-one/</link><pubDate>Wed, 06 Jul 2022 16:51:04 -0500</pubDate><guid>https://diegotony.github.io/blog/posts/github-actions-part-one/</guid><description>GitHub Actions es un PaaS, perteneciente a Github, es una plataforma que nos permite automatizar algunas procesos para nuestro codigo, como por ejemplo:
Pruebas Unitarias (test) Construcion (build) Despliegue (deploy) Documentacion (docs) Enviar un mensaje a Slack (webhook) Existen algunas cosas mas, pero esto es para lo que se ocupa actualemente. A continuacion te presento los actions:
upload-artifact Repositorio
Si has ocupado GitLab CI sabes existe una manera de pasar artefactos de un job a otro, este action es la traduccion de eso, digamos que se requiere que pases el build de tu aplicacion a otro job por lo que este accion te facilita eso, OJO , este solo sube, necesitas de otro accion para descargarlo, mas adelante te lo presentare.</description><content>&lt;p>GitHub Actions es un PaaS, perteneciente a Github, es una plataforma que nos permite automatizar algunas procesos para nuestro codigo, como por ejemplo:&lt;/p>
&lt;ul>
&lt;li>Pruebas Unitarias (test)&lt;/li>
&lt;li>Construcion (build)&lt;/li>
&lt;li>Despliegue (deploy)&lt;/li>
&lt;li>Documentacion (docs)&lt;/li>
&lt;li>Enviar un mensaje a Slack (webhook)&lt;/li>
&lt;/ul>
&lt;p>Existen algunas cosas mas, pero esto es para lo que se ocupa actualemente. A continuacion te presento los actions:&lt;/p>
&lt;h2 id="upload-artifact">upload-artifact&lt;/h2>
&lt;p>&lt;a href="https://github.com/actions/upload-artifact">Repositorio&lt;/a>&lt;/p>
&lt;p>Si has ocupado GitLab CI sabes existe una manera de pasar artefactos de un job a otro, este action es la traduccion de eso, digamos que se requiere que pases el build de tu aplicacion a otro job por lo que este accion te facilita eso, &lt;strong>OJO&lt;/strong> , este solo sube, necesitas de otro accion para descargarlo, mas adelante te lo presentare. Aqui te presento como se veria en un job:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Create a file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>: &lt;span style="color:#ae81ff">echo &amp;#34;I won&amp;#39;t live long&amp;#34; &amp;gt; my_file.txt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Upload Artifact&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/upload-artifact@v3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">my-artifact&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">my_file.txt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">retention-days&lt;/span>: &lt;span style="color:#ae81ff">5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Algunas consideraciones antes de usar este job:&lt;/p>
&lt;ul>
&lt;li>Puedes subir tanto carpetas como archivos&lt;/li>
&lt;li>Puedes establecer un tiempo de existencia para el artefacto este disponible&lt;/li>
&lt;li>En caso que lo quieras usar en otro job, debes de referirte a el por el nombre que pusiste en el parametro de &lt;strong>name&lt;/strong> como en este caso es &lt;code>my_file.txt&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="download-artifact">download-artifact&lt;/h2>
&lt;p>&lt;a href="https://github.com/actions/download-artifact">Repositorio&lt;/a>&lt;/p>
&lt;p>Bueno como ya te lo mencione en el action anterior, este job nos ayuda a recuperar los artefactos que subimos con el action anterior, es muy sencillo se lo hace de la siguiente manera:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/checkout@v2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/download-artifact@v3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">my-artifact&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>No hay consideraciones para este job&lt;/p></content></item><item><title>Pipeline para deployar a Cloudfront</title><link>https://diegotony.github.io/blog/posts/deploy-to-cloudfront-github-actions/</link><pubDate>Wed, 06 Jul 2022 16:51:04 -0500</pubDate><guid>https://diegotony.github.io/blog/posts/deploy-to-cloudfront-github-actions/</guid><description>AWS Cloudfront es un servicio para servir contenido estatico o tambien llamado CDN, que resulta muy util cuando se desea deployar una pagina web bajo demanda con un bajo costo. A continuacion les presento un pipeline para deployar a AWS Cloudfront Usando Github Actions.
Que debe hacer nuestro pipeline:
Configuraciones generales del job Check de nuestro codigo Build de nuestra aplicacion Setup del Role de AWS Sync del contenido a nuestro bucket de S3 Crear una Invalidation DONE Desarrollo 0.</description><content>&lt;p>AWS Cloudfront es un servicio para servir contenido estatico o tambien llamado CDN, que resulta muy util cuando se desea deployar una pagina web bajo demanda con un bajo costo. A continuacion les presento un pipeline para deployar a AWS Cloudfront Usando Github Actions.&lt;/p>
&lt;p>Que debe hacer nuestro pipeline:&lt;/p>
&lt;ol start="0">
&lt;li>Configuraciones generales del job&lt;/li>
&lt;li>Check de nuestro codigo&lt;/li>
&lt;li>Build de nuestra aplicacion&lt;/li>
&lt;li>Setup del Role de AWS&lt;/li>
&lt;li>Sync del contenido a nuestro bucket de S3&lt;/li>
&lt;li>Crear una Invalidation&lt;/li>
&lt;li>DONE&lt;/li>
&lt;/ol>
&lt;h2 id="desarrollo">Desarrollo&lt;/h2>
&lt;h3 id="0-configuraciones-generales-del-job">0. Configuraciones generales del job&lt;/h3>
&lt;p>En este paso se define que evento va hacer que el pipeline se &lt;strong>&amp;ldquo;encienda&amp;rdquo;&lt;/strong>. En este caso cuando mandemos cambios directamente al branch &lt;strong>main&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Deploy to Cloudfront&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">on&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">push&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">branches&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">main&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Despues se define el o los jobs que van correr, como por ejemplo:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">jobs&lt;/span>: &lt;span style="color:#75715e"># &amp;lt;= Dentro de este bloque se insertan los jobs que quiera dentro de este workflow &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">deploy&lt;/span>: &lt;span style="color:#75715e"># &amp;lt;= Aqui se nombra el primer job&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">aws-cloudfront&lt;/span> &lt;span style="color:#75715e"># &amp;lt;= el nombre del job&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">env&lt;/span>: &lt;span style="color:#75715e"># &amp;lt;= Se inserta las variables de entorno que se van a ocupar de manera global, en este caso las credendiales de AWS&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">BUILD_DIR&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.BUILD_DIR }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">AWS_DISTRIBUTION_ID&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.AWS_DISTRIBUTION_ID }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">AWS_S3_BUCKET&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.AWS_S3_BUCKET }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">runs-on&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-latest&lt;/span> &lt;span style="color:#75715e"># &amp;lt;= En que sistema operativo se va a correr el job, en este ubuntu, que es ademas el mas barato &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">steps&lt;/span>:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="1-check-de-nuestro-codigo">1. Check de nuestro codigo&lt;/h3>
&lt;p>Aqui lo que hace basicamente es descargar nuestro codigo al job&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Check out code &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/checkout@v3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-build-de-nuestra-aplicacion">2. Build de nuestra aplicacion&lt;/h3>
&lt;p>Para este pagina web se usa &lt;strong>NodeJS&lt;/strong> como lenguaje de programacion, por lo que se tiene que instalar dentro del job, se lo hace de la siguiente manera.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/setup-node@v3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">node-version&lt;/span>: &lt;span style="color:#ae81ff">18&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Se procede a hacer una instalacion de las dependencias.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Install Dependencies&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &lt;/span> &lt;span style="color:#ae81ff">npm install&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Se hace un build de la aplicacion, varia mucho del framework, lo que se usa para el ejemplo es &lt;strong>NextJS&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Build NextJs App&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &lt;/span> &lt;span style="color:#ae81ff">npm run build --if-present &lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>| Algo importante es que a veces sabe dar error el el build cuando se genera los proyectos por medio de CLI&amp;rsquo;s del framework, como por ejemplo angular-cli o react-cli, por lo que se necesita instalar este CLI antes de hacer el build de manera global, como por ejemplo &lt;code>npm install -g @angular/cli&lt;/code>&lt;/p>
&lt;h3 id="3-setup-del-role-de-aws">3. Setup del Role de AWS&lt;/h3>
&lt;p>Se hace la configuracion del Role de AWS para desplegar el proyecto por medio de GitHub Actions, a mi parecer es la manera mas segura, &lt;a href="https://github.com/aws-actions/configure-aws-credentials#assuming-a-role">aqui&lt;/a> te dejo como configurar el Role o en tal caso que quieras hacerlo con crendenciales presiona &lt;a href="https://github.com/aws-actions/configure-aws-credentials">aqui&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Configure AWS Role&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">aws-actions/configure-aws-credentials@v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">role-to-assume&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.AWS_ACCESS_ROLE }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">role-session-name&lt;/span>: &lt;span style="color:#ae81ff">github-action-job&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">role-duration-seconds&lt;/span>: &lt;span style="color:#ae81ff">900&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">aws-region&lt;/span>: &lt;span style="color:#ae81ff">us-east-1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Algo importante a mencionar es que si usaste la configuracion con el Role, debes agregar el ARN del Roles en los SECRETS de GitHub Actions, dentro del step debes de poner este bloque.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">permissions&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">id-token&lt;/span>: &lt;span style="color:#ae81ff">write&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">contents&lt;/span>: &lt;span style="color:#ae81ff">read&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finalmente se veria asi&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Configure AWS Role&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">aws-actions/configure-aws-credentials@v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">permissions&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">id-token&lt;/span>: &lt;span style="color:#ae81ff">write&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">contents&lt;/span>: &lt;span style="color:#ae81ff">read&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">with&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">role-to-assume&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.AWS_ACCESS_ROLE }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">role-session-name&lt;/span>: &lt;span style="color:#ae81ff">github-action-job&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">role-duration-seconds&lt;/span>: &lt;span style="color:#ae81ff">900&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">aws-region&lt;/span>: &lt;span style="color:#ae81ff">us-east-1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-sync-del-contenido-a-nuestro-bucket-de-s3">4. Sync del contenido a nuestro bucket de S3&lt;/h3>
&lt;p>Ahora se sube el build dentro del bucket de S3, para eso se necesita el URL del Bucket, por lo que el url se veria mas o menos asi &lt;code>s3://my-source-bucket&lt;/code>, algo mas para agregar es que en la etapa de build, no necesariamente siempre va a generar el el diretorio &lt;code>build/&lt;/code> como resultado del el build, en alguno casos tambien se same llamar &lt;code>dist/&lt;/code> o &lt;code>out/&lt;/code>, por lo que te recomiendo correr en local el comando para que sepas que directorio vas a subir. Te recomiendo poner el nombre de bucket en los SECRETS de GitHub Actions.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Sync S3 Bucket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> echo &amp;#34;Save in S3 Bucket&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> aws s3 sync public $AWS_S3_BUCKET&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="5-crear-una-invalidation">5. Crear una Invalidation&lt;/h3>
&lt;p>Y por ultimo se procede a invalidar la version subida en &lt;strong>Cloudfront&lt;/strong>, &lt;em>Por que es necesario esto?&lt;/em> Ya que cada vez que se despliega una version nueva de la pagina web, Cloudfront lo guarda en cache dentro de su servicio, para optimizar la cargar del sitio, por lo que se necesita decirle que tome la nueva version en el bucket, por lo que se invalida la que previamente fue subida, y se valida la actual, para esto se necesita el ID del Cloudfront.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Deploy Invalidation &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">run&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> echo &amp;#34;Deploy to Cloudfront&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> aws cloudfront create-invalidation --paths /* --distribution-id $AWS_DISTRIBUTION_ID&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En caso que estes familiarizado con los Reusable Jobs en Github puedes hecharle un ojo a este &lt;a href="https://github.com/diegotony/gh-pipelines/blob/main/.github/workflows/aws-cloudfront.yml">job&lt;/a>.&lt;/p></content></item></channel></rss>